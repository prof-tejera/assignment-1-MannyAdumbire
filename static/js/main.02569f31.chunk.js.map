{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","views/DocumentationView.js","utils/helpers.js","components/timers/UseTimer.js","components/generic/DisplayTime.js","components/generic/TimerInput.js","components/generic/Button.js","components/generic/Panel.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/timers/XY.js","components/timers/Tabata.js","views/TimersView.js","App.js","index.js"],"names":["Wrapper","styled","div","_templateObject","Object","taggedTemplateLiteral","Container","_templateObject2","Title","_templateObject3","RenderComponent","_templateObject4","Documentation","table","_templateObject5","DocumentComponent","_ref","title","component","propDocs","react_default","a","createElement","DocumentComponent_Documentation","map","doc","index","key","prop","description","type","defaultValue","sizeMapping","small","medium","large","Loading_templateObject","Dot","span","Loading_templateObject2","props","size","color","DotGroup","Loading_templateObject3","Loading","_ref$size","_ref$color","Loading_Container","DocumentationView_templateObject","DocumentationView_templateObject2","DocumentationView_Container","DocumentationView_Title","documentation_DocumentComponent","generic_Loading","formatSeconds","time","concat","secsFromMinsSecs","minutes","seconds","minsPartFromMs","ms","Math","trunc","secsPartFromMs","msFromMinsSecs","useTimer","opt","_useState","useState","_useState2","slicedToArray","isRunning","setIsRunning","_useState3","_useState4","isRest","setIsRest","_useState5","_useState6","reset","setReset","_useState7","_useState8","fastForward","setFastForward","_useState9","_useState10","secsLeft","setSecsLeft","_useState11","_useState12","minsLeft","setMinsLeft","_useState13","_useState14","roundNumber","setRoundNumber","msLeft","useRef","roundIntervalRef","defaultOpts","minutesPerRound","secondsPerRound","minutesRest","secondsRest","roundsTotal","options","useEffect","current","setInterval","h","_h$minsSecsFromMs3","_h$minsSecsFromMs4","prev","clearInterval","optionsRef","DisplayTime","mins","secs","rest","round","isRoundTimer","includes","className","TimerInput","label","value","propSetter","disabled","id","floor","random","disabledAttr","assign","onChange","e","parseInt","target","max","min","htmlFor","Button","onClick","btnClass","toLowerCase","Panel","timers","buttons","children","timer","idx","generic_TimerInput","bType","generic_Button","Stopwatch","minutesShown","setMinutesShown","secondsShown","setSecondsShown","setMinutesPerRound","setSecondsPerRound","_useTimer","getPassedSeconds","objectSpread2","buttonTypes","timerInputs","generic_Panel","generic_DisplayTime","CountDown","XY","setRoundsTotal","required","Tabata","setMinutesRest","setSecondsRest","Timers","TimersView_templateObject","Timer","TimersView_templateObject2","TimerTitle","TimersView_templateObject3","TimersView","C","timers_Stopwatch","Countdown","timers_XY","timers_Tabata","TimersView_Timer","App_templateObject","Nav","dist","to","App","App_Container","App_Nav","react_router_dist","path","element","DocumentationView","views_TimersView","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.02569f31.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nconst DocumentComponent = ({ title, component, propDocs }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <Container>\n        <RenderComponent>{component}</RenderComponent>\n        <Documentation>\n          <thead>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {propDocs.map((doc, index) => {\n              return (\n                <tr key={index}>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Documentation>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nconst Loading = ({ size = \"medium\", color = primaryColor }) => {\n  return (\n    <Container>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n    </Container>\n  );\n};\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\n/**\n * You can document your components by using the DocumentComponent component\n */\nconst Documentation = () => {\n  return (\n    <Container>\n      <div>\n        <Title>Documentation</Title>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"medium\",\n            },\n          ]}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default Documentation;\n","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\n// get the remainder seconds after counting out the whole minutes.\nexport function secsPartFromSecs(seconds) {\n  return seconds % 60;\n}\n\n// Format the time display.\nexport function formatSeconds(time) {\n  time = time < 10 ? `0${time}` : time;\n  return time;\n}\n\n// get seconds difference between two dates.\nexport function getMsDiff(startDate, endDate) {\n  return endDate.getTime() - startDate.getTime();\n}\n\n// get the total number of seconds from minutes and seconds.\nexport function secsFromMinsSecs(minutes, seconds) {\n  return minutes * 60 + seconds;\n}\n\n// get the total number of minutes from seconds.\nexport function minsPartFromMs(ms) {\n  return Math.trunc(ms / 1000 / 60);\n}\n\n// get the total number of seconds from seconds.\nexport function secsPartFromMs(ms) {\n  return Math.trunc(ms / 1000 % 60);\n}\n\n// Get the minutes part from seconds.\nexport function minsPartFromSecs(secs) {\n  return Math.trunc(secs / 60);\n}\n\n// Get milliseconds from minutes and seconds.\nexport function msFromMinsSecs(minutes, seconds) {\n  return (minutes * 60 + seconds) * 1000;\n}\n\n// Get minutes and seconds from milliseconds.\nexport function minsSecsFromMs(ms) {\n  return [ minsPartFromMs(ms), secsPartFromMs(ms) ];\n}\n","import { useState, useRef, useEffect } from \"react\";\nimport * as h from \"../../utils/helpers.js\";\n\nexport const useTimer = (opt) => {\n  // Props that should cause component rerender.\n  const [isRunning, setIsRunning] = useState(false);\n  const [isRest, setIsRest] = useState(false);\n  const [reset, setReset] = useState(true);\n  const [fastForward, setFastForward] = useState(false);\n  const [secsLeft, setSecsLeft] = useState(0); \n  const [minsLeft, setMinsLeft] = useState(0);\n  const [roundNumber, setRoundNumber] = useState(1);\n\n  // Props that shouldn't cause rerender.\n  const msLeft = useRef(0);\n  const timerFrequency = 250;\n\n  // The Intervals that progress the timer.\n  const roundIntervalRef = useRef(null);\n\n  // Set default values for the timer, or use the provided ones.\n  const defaultOpts = {\n    minutesPerRound: opt.minutesPerRound || 0,\n    secondsPerRound: opt.secondsPerRound || 0,\n    minutesRest: opt.minutesRest || 0,\n    secondsRest: opt.secondsRest || 0,\n    roundsTotal: opt.roundsTotal || 1,\n  };\n\n  const options = useRef(defaultOpts);\n  // TODO Why does calling setOptions({...x}) here lead to infinite loop/render with useState(defaultOpts)?\n\n  // Logic for rounds.\n  useEffect(() => {\n    if (reset) {\n      resetFn();\n      setReset(false);\n    }\n    if (fastForward) {\n      fastForwardFn();\n      setFastForward(false);\n    }\n    // If the timer isn't running or it's a rest period.\n    if (!isRunning) {\n      // cleanup the Interval\n      roundIntervalRef.current && clearInterval(roundIntervalRef.current);\n    } else {\n      // setup new Interval.\n      roundIntervalRef.current = setInterval(() => {\n        if (!roundNumber) {\n          setRoundNumber(1);\n        }\n        if (!msLeft.current) {\n          // get the total number of ms for the round.\n          msLeft.current = h.msFromMinsSecs(\n            options.current.minutesPerRound,\n            options.current.secondsPerRound\n          );\n        } else {\n          msLeft.current -= timerFrequency;\n        }\n        // Update the displayed time left.\n        if (msLeft.current >= timerFrequency) {\n          let [minsLeft, secsLeft] = h.minsSecsFromMs(msLeft.current);\n            setMinsLeft(minsLeft);\n            setSecsLeft(secsLeft);\n        } else {\n          // Are there still rounds left?\n          if (roundNumber < options.current.roundsTotal) {\n            // Is there a rest period?\n            if ((options.current.minutesRest || options.current.secondsRest ) && !isRest) {\n              // Initiate the rest period.\n              setSecsLeft(options.current.secondsRest);\n              setMinsLeft(options.current.minutesRest);\n              msLeft.current = h.msFromMinsSecs(\n                options.current.minutesRest,\n                options.current.secondsRest\n              );\n              setIsRest(true);\n            }else{\n              // Go to the next round.\n              setRoundNumber((prev) => prev + 1);\n              msLeft.current = h.msFromMinsSecs(\n                options.current.minutesPerRound,\n                options.current.secondsPerRound\n              );\n              setIsRest(false);\n            }\n          } else {\n            // No more rounds left.\n            setIsRunning(false);\n          }\n        }\n      }, timerFrequency);\n    }\n    return () => {\n      // cleanup the Interval.\n      if (roundIntervalRef.current) {\n        clearInterval(roundIntervalRef.current);\n      }\n    };\n  }, [\n    isRunning,\n    isRest,\n    reset,\n    fastForward,\n    roundNumber,\n  ]);\n\n  return {\n    isRest: isRest,\n    isRunning: isRunning,\n    minsLeft: minsLeft,\n    secsLeft: secsLeft,\n    roundNumber: roundNumber,\n    optionsRef: options,\n    setReset: setReset,\n    setIsRunning: setIsRunning,\n    setFastForward: setFastForward,\n  };\n\n  // Reset the timer.\n  function resetFn() {\n    setIsRunning(false);\n    setIsRest(false);\n    setFastForward(false);\n    setRoundNumber(1);\n    msLeft.current = 0;\n    setSecsLeft(options.current.secondsPerRound);\n    setMinsLeft(options.current.minutesPerRound);\n  }\n  // Fast forward the timer.\n  function fastForwardFn() {\n    setIsRunning(false);\n    setFastForward(false);\n    setIsRest(false);\n    msLeft.current = 0;\n    setRoundNumber(options.current.roundsTotal);\n    setSecsLeft(0);\n    setMinsLeft(0);\n  }\n};\n","import React from \"react\";\n\nconst DisplayTime = ({ mins, secs, type, rest, round }) => {\n  const roundTimers = [\"xy\", \"tabata\"];\n  const isRoundTimer = roundTimers.includes(type);\n  return (\n    <div className={`timer-display ${rest ? \"timer-display-mode-rest\" : \"\"}`}>\n      <div\n        className={`timer-display-mode  `}\n      >\n        {isRoundTimer && (rest ? \"Rest\" : `Round #${round}`)}\n      </div>\n      <div className=\"timer-display-time\">\n        {mins}:{secs}\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayTime;\n","import React from \"react\";\n\nconst TimerInput = ({ label, value, propSetter, disabled}) => {\n\n    // create random id for input so that label can be associated with input.\n    const id = Math.floor(Math.random() * 10000);\n\n    const disabledAttr = disabled ? {\"disabled\":true} : {};\n\n    function handleChange(e) {\n        propSetter(parseInt(e.target.value));\n    }\n    return(\n        <span className=\"timer-input-group\">\n        <input {...disabledAttr} className='timer-input' id={id} type=\"number\" value={value} onChange={handleChange} max=\"60\" min=\"0\" />\n        <label htmlFor={id}>{label}</label>\n        </span>\n    );\n\n}\n\nexport default TimerInput;","import React from \"react\";\n\nconst Button = ({ type, label, onClick }) => {\n  // Keep the current mode in sync with the parent component that passed it in.\n  const btnClass = 'button-'+ type.toLowerCase();\n\n  // set the Label based on button type.\n  return (\n    <div className={`${btnClass} button-timer`} onClick={onClick}>\n        {label}\n    </div>\n  );\n};\nexport default Button;\n","import React from \"react\";\nimport TimerInput from \"./TimerInput\";\nimport Button from \"./Button\";\n\nconst Panel = ({ timers, buttons, children }) => {\n  return (\n    <div className={`timer-panel`}>\n      <div className=\"timer-inputs\">\n        {timers.map((timer, idx) => (\n          <TimerInput\n            key={`timer-${idx}`}\n            label={timer.label}\n            value={timer.value}\n            propSetter={timer.propSetter}\n            disabled={timer.disabled}\n          ></TimerInput>\n        ))}\n      </div>\n\n      <div className=\"timer-actions\">\n        {buttons.map((bType, idx) => (\n          <Button\n            key={`button-${idx}`}\n            type={bType.type}\n            onClick={bType.onClick}\n            label={bType.label}\n          />\n        ))}\n      </div>\n      <div className=\"timer-display\">\n        {children}\n        </div>\n    </div>\n  );\n};\n\nexport default Panel;\n","import React, { useEffect, useState } from \"react\";\nimport { useTimer } from \"./UseTimer\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport * as h from \"../../utils/helpers.js\";\nimport \"../../Timer.css\";\n\nconst timerType = \"stopwatch\";\n\nconst Stopwatch = () => {\n  // The displayed amount of time left in minutes & seconds.\n  const [minutesShown, setMinutesShown] = useState(\"00\");\n  const [secondsShown, setSecondsShown] = useState(\"00\");\n\n  const [minutesPerRound, setMinutesPerRound] = useState(0);\n  const [secondsPerRound, setSecondsPerRound] = useState(5);\n\n  const {\n    setFastForward,\n    setIsRunning,\n    isRunning,\n    setReset,\n    minsLeft,\n    secsLeft,\n    optionsRef,\n  } = useTimer({\n    minutesPerRound,\n    secondsPerRound,\n  });\n\n  useEffect(() => {\n    const mins = h.minsPartFromSecs(getPassedSeconds());\n    const secs = h.secsPartFromSecs(getPassedSeconds());\n    setSecondsShown(h.formatSeconds(secs));\n    setMinutesShown(h.formatSeconds(mins));\n\n    // Calculate elapsed seconds.\n    function getPassedSeconds() {\n      const totalSecsPerRound = h.secsFromMinsSecs(\n        optionsRef.current.minutesPerRound,\n        optionsRef.current.secondsPerRound\n      );\n      const totalSecsLeftRound = h.secsFromMinsSecs(minsLeft, secsLeft);\n      return totalSecsPerRound - totalSecsLeftRound;\n    }\n  }, [minsLeft, secsLeft, optionsRef]);\n\n  // Update timer options.\n  useEffect(() => {\n    optionsRef.current = {\n      ...optionsRef.current,\n      minutesPerRound: minutesPerRound,\n      secondsPerRound: secondsPerRound,\n    };\n  }, [minutesPerRound, secondsPerRound, optionsRef]);\n\n  const handleFastForward = () => {\n    setFastForward(true);\n  };\n  const handleReset = () => {\n    setReset(true);\n  };\n\n  // Start/Stop.\n  function handleStartStop() {\n    setIsRunning((prev) => {\n      return !prev;\n    });\n  }\n\n  const buttonTypes = [\n    { type: \"fast-forward\", onClick: handleFastForward, label: \"FF\" },\n    { type: \"reset\", onClick: handleReset, label: \"RESET\" },\n    {\n      type: isRunning ? \"stop\" : \"start\",\n      label: isRunning ? \"STOP\" : \"START\",\n      onClick: handleStartStop,\n    },\n  ];\n  const timerInputs = [\n    {\n      label: \"Mins\",\n      value: minutesPerRound,\n      propSetter: setMinutesPerRound,\n      disabled: isRunning,\n    },\n    {\n      label: \"Secs\",\n      value: secondsPerRound,\n      propSetter: setSecondsPerRound,\n      disabled: isRunning,\n    },\n  ];\n\n  return (\n    <Panel className=\"timer-panel\" timers={timerInputs} buttons={buttonTypes}>\n      <DisplayTime type={timerType} mins={minutesShown} secs={secondsShown} />\n    </Panel>\n  );\n};\n\nexport default Stopwatch;\n","import React, { useEffect, useState } from \"react\";\nimport { useTimer } from \"./UseTimer\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport * as h from \"../../utils/helpers.js\";\nimport \"../../Timer.css\";\n\nconst timerType = \"countdown\";\n\nconst CountDown = () => {\n  // The displayed amount of time left in minutes & seconds.\n  const [minutesShown, setMinutesShown] = useState(\"00\");\n  const [secondsShown, setSecondsShown] = useState(\"00\");\n\n  const [minutesPerRound, setMinutesPerRound] = useState(0);\n  const [secondsPerRound, setSecondsPerRound] = useState(5);\n\n  const {\n    setFastForward,\n    setIsRunning,\n    isRunning,\n    setReset,\n    minsLeft,\n    secsLeft,\n    optionsRef,\n  } = useTimer({\n    minutesPerRound,\n    secondsPerRound,\n  });\n  useEffect(() => {\n    // Update displyed time left for round.\n    setSecondsShown(h.formatSeconds(secsLeft));\n    setMinutesShown(h.formatSeconds(minsLeft));\n  }, [secsLeft, minsLeft]);\n\n  // Update timer options.\n  useEffect(() => {\n    optionsRef.current = {\n      ...optionsRef.current,\n      minutesPerRound: minutesPerRound,\n      secondsPerRound: secondsPerRound,\n    };\n  }, [minutesPerRound, secondsPerRound, optionsRef]);\n\n  const handleFastForward = () => {\n    setFastForward(true);\n  };\n  const handleReset = () => {\n    setReset(true);\n  };\n\n  // Start/Stop.\n  function handleStartStop() {\n    setIsRunning((prev) => {\n      return !prev;\n    });\n  }\n\n  const buttonTypes = [\n    { type: \"fast-forward\", onClick: handleFastForward, label: \"FF\" },\n    { type: \"reset\", onClick: handleReset, label: \"RESET\" },\n    {\n      type: isRunning ? \"stop\" : \"start\",\n      label: isRunning ? \"STOP\" : \"START\",\n      onClick: handleStartStop,\n    },\n  ];\n  const timerInputs = [\n    {\n      label: \"Mins\",\n      value: minutesPerRound,\n      propSetter: setMinutesPerRound,\n      disabled: isRunning,\n    },\n    {\n      label: \"Secs\",\n      value: secondsPerRound,\n      propSetter: setSecondsPerRound,\n      disabled: isRunning,\n    },\n  ];\n\n  return (\n    <Panel className=\"timer-panel\" timers={timerInputs} buttons={buttonTypes}>\n      <DisplayTime type={timerType} mins={minutesShown} secs={secondsShown} />\n    </Panel>\n  );\n};\n\nexport default CountDown;\n","import React, { useEffect, useState } from \"react\";\nimport { useTimer } from \"./UseTimer\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport * as h from \"../../utils/helpers.js\";\nimport \"../../Timer.css\";\n\nconst timerType = \"xy\";\n\nconst XY = () => {\n  // The displayed amount of time left in minutes & seconds.\n  const [minutesShown, setMinutesShown] = useState(\"00\");\n  const [secondsShown, setSecondsShown] = useState(\"00\");\n\n  const [minutesPerRound, setMinutesPerRound] = useState(0);\n  const [secondsPerRound, setSecondsPerRound] = useState(5);\n\n  const [roundsTotal, setRoundsTotal] = useState(2);\n\n  const {\n    setFastForward,\n    setIsRunning,\n    roundNumber,\n    isRunning,\n    setReset,\n    minsLeft,\n    secsLeft,\n    optionsRef,\n  } = useTimer({\n    minutesPerRound,\n    secondsPerRound,\n    roundsTotal,\n  });\n  useEffect(() => {\n    // Update displyed time left for round.\n    setSecondsShown(h.formatSeconds(secsLeft));\n    setMinutesShown(h.formatSeconds(minsLeft));\n  }, [secsLeft, minsLeft]);\n\n  // Update timer options.\n  useEffect(() => {\n    optionsRef.current = {\n      ...optionsRef.current,\n      roundsTotal: roundsTotal,\n      minutesPerRound: minutesPerRound,\n      secondsPerRound: secondsPerRound,\n    };\n  }, [minutesPerRound, secondsPerRound, roundsTotal, optionsRef]);\n\n  const handleReset = () => {\n    setReset(true);\n  };\n  const handleFastForward = () => {\n    setFastForward(true);\n  };\n  // const handleFastForward = () => {\n  //   setFF(true);\n  // };\n\n  // Start/Stop.\n  function handleStartStop() {\n    setIsRunning((prev) => {\n      return !prev;\n    });\n  }\n  const buttonTypes = [\n    { type: \"fast-forward\", onClick: handleFastForward, label: \"FF\" },\n    { type: \"reset\", onClick: handleReset, label: \"RESET\" },\n    {\n      type: isRunning ? \"stop\" : \"start\",\n      label: isRunning ? \"STOP\" : \"START\",\n      onClick: handleStartStop,\n    },\n  ];\n  const timerInputs = [\n    {\n      label: \"Mins\",\n      value: minutesPerRound,\n      propSetter: setMinutesPerRound,\n      disabled: isRunning,\n    },\n    {\n      label: \"Secs\",\n      value: secondsPerRound,\n      propSetter: setSecondsPerRound,\n      disabled: isRunning,\n    },\n    {\n      label: \"Rounds\",\n      value: roundsTotal,\n      propSetter: setRoundsTotal,\n      disabled: isRunning,\n      required: true,\n    },\n  ];\n\n  return (\n    <Panel className=\"timer-panel\" timers={timerInputs} buttons={buttonTypes}>\n      <DisplayTime\n        type={timerType}\n        round={roundNumber}\n        mins={minutesShown}\n        secs={secondsShown}\n      />\n    </Panel>\n  );\n};\n\nexport default XY;\n","import React, { useEffect, useState } from \"react\";\nimport { useTimer } from \"./UseTimer\";\nimport DisplayTime from \"../generic/DisplayTime\";\nimport Panel from \"../generic/Panel\";\nimport * as h from \"../../utils/helpers.js\";\nimport \"../../Timer.css\";\n\nconst timerType = \"tabata\";\n\nconst Tabata = () => {\n  // The displayed amount of time left in minutes & seconds.\n  const [minutesShown, setMinutesShown] = useState(\"00\");\n  const [secondsShown, setSecondsShown] = useState(\"00\");\n\n  const [minutesPerRound, setMinutesPerRound] = useState(0);\n  const [secondsPerRound, setSecondsPerRound] = useState(5);\n\n  const [minutesRest, setMinutesRest] = useState(0);\n  const [secondsRest, setSecondsRest] = useState(5);\n\n  const [roundsTotal, setRoundsTotal] = useState(2);\n\n  const {\n    setFastForward,\n    setIsRunning,\n    roundNumber,\n    isRunning,\n    setReset,\n    minsLeft,\n    secsLeft,\n    isRest,\n    optionsRef,\n  } = useTimer({\n    minutesPerRound,\n    secondsPerRound,\n    roundsTotal,\n  });\n  useEffect(() => {\n    // Update displyed time left for round.\n    setSecondsShown(h.formatSeconds(secsLeft));\n    setMinutesShown(h.formatSeconds(minsLeft));\n  }, [secsLeft, minsLeft]);\n\n  // Update timer options.\n  useEffect(() => {\n    optionsRef.current = {\n      ...optionsRef.current,\n      roundsTotal: roundsTotal,\n      minutesPerRound: minutesPerRound,\n      secondsPerRound: secondsPerRound,\n      minutesRest: minutesRest,\n      secondsRest: secondsRest,\n    };\n  }, [\n    minutesPerRound,\n    secondsPerRound,\n    minutesRest,\n    secondsRest,\n    roundsTotal,\n    optionsRef,\n  ]);\n\n  const handleReset = () => {\n    setReset(true);\n  };\n  \n  const handleFastForward = () => {\n    setFastForward(true);\n  };\n\n  // Start/Stop.\n  function handleStartStop() {\n    setIsRunning((prev) => {\n      return !prev;\n    });\n  }\n\n  const buttonTypes = [\n    { type: \"fast-forward\", onClick: handleFastForward, label: \"FF\" },\n    { type: \"reset\", onClick: handleReset, label: \"RESET\" },\n    {\n      type: isRunning ? \"stop\" : \"start\",\n      label: isRunning ? \"STOP\" : \"START\",\n      onClick: handleStartStop,\n    },\n  ];\n  const timerInputs = [\n    {\n      label: \"Mins\",\n      value: minutesPerRound,\n      propSetter: setMinutesPerRound,\n      disabled: isRunning\n    },\n    {\n      label: \"Secs\",\n      value: secondsPerRound,\n      propSetter: setSecondsPerRound,\n      disabled: isRunning\n    },\n    {\n      label: \"Rounds\",\n      value: roundsTotal,\n      propSetter: setRoundsTotal,\n      disabled: isRunning,\n      required: true\n    },\n    {\n      label: \"Rest(Mins)\",\n      value: minutesRest,\n      propSetter: setMinutesRest,\n      disabled: isRunning\n    },\n    {\n      label: \"Rest(Secs)\",\n      value: secondsRest,\n      propSetter: setSecondsRest,\n      disabled: isRunning\n    }\n  ];\n  \n  return (\n      <Panel className=\"timer-panel\" timers={timerInputs} buttons={buttonTypes} >\n      <DisplayTime\n        type={timerType}\n        rest={isRest}\n        round={roundNumber}\n        mins={minutesShown}\n        secs={secondsShown}\n      />\n    </Panel>\n  );\n};\n\nexport default Tabata;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Timer = styled.div`\n  border: 1px solid gray;\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.5rem;\n`;\n\nconst TimerTitle = styled.div``;\n\nconst TimersView = () => {\n  const timers = [\n    { title: \"Stopwatch\", C: <Stopwatch /> },\n    { title: \"Countdown\", C: <Countdown /> },\n    { title: \"XY\", C: <XY /> },\n    { title: \"Tabata\", C: <Tabata /> },\n  ];\n\n  return (\n    <Timers>\n      {timers.map((timer) => (\n        <Timer key={`timer-${timer.title}`}>\n          <TimerTitle>{timer.title}</TimerTitle>\n          {timer.C}\n        </Timer>\n      ))}\n    </Timers>\n  );\n};\n\nexport default TimersView;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nconst Nav = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Timers</Link>\n        </li>\n        <li>\n          <Link to=\"/docs\">Documentation</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nconst App = () => {\n  return (\n    <Container>\n      <Router>\n        <Nav />\n        <Routes>\n          <Route path=\"/docs\" element={<DocumentationView />} />\n          <Route path=\"/\" element={<TimersView />} />\n        </Routes>\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}